/*
Даны три целых числа a ,b,c, вернуть наибольшее число, полученное после вставки следующих операторов и скобок :+,*,()
Другими словами, попробуйте каждую комбинацию a,b,c с [*+()] и верните максимальное полученное значение (подробнее об этом читайте в примечаниях)
Пример
С числами 1, 2 и 3 вот несколько способов размещения знаков и скобок :

1 * (2 + 3) = 5
1 * 2 * 3 = 6
1 + 2 * 3 = 7
(1 + 2) * 3 = 9
Таким образом, максимальное значение , которое вы можете получить, равно 9 .

Примечания
Цифры всегда положительные .
Числа находятся в диапазоне (1 ≤ a, b, c ≤ 10) .
Вы можете использовать одну и ту же операцию более одного раза .
Необязательно расставлять все знаки и скобки .
Возможно повторение цифр .
Вы не можете поменять местами операнды . Например, в данном примере вы не можете получить выражение (1 + 3) * 2 = 8 .
Ввод >> Примеры вывода:
expressionsMatter(1,2,3)  ==>  return 9
Объяснение :
После расстановки знаков и скобок Максимальное значение , полученное из выражения (1+2) * 3 = 9 .

expressionsMatter(1,1,1)  ==>  return 3
Объяснение :
После расстановки знаков Максимальное значение , полученное из выражения, равно 1 + 1 + 1 = 3 .

expressionsMatter(9,1,1)  ==>  return 18
Объяснение :
После расстановки знаков и скобок Максимальное значение , полученное из выражения, равно 9 * (1+1) = 18 . ___# Задача

Даны три целых числа a ,b,c, вернуть наибольшее число, полученное после вставки следующих операторов и скобок :+,*,()
Другими словами, попробуйте каждую комбинацию a,b,c с [*+()] и верните максимальное полученное значение.
Пример
С числами 1, 2 и 3 вот несколько способов размещения знаков и скобок :

1 * (2 + 3) = 5
1 * 2 * 3 = 6
1 + 2 * 3 = 7
(1 + 2) * 3 = 9
Таким образом, максимальное значение , которое вы можете получить, равно 9 .

Примечания
Цифры всегда положительные .
Числа находятся в диапазоне (1 ≤ a, b, c ≤ 10) .
Вы можете использовать одну и ту же операцию более одного раза .
Необязательно расставлять все знаки и скобки .
Возможно повторение цифр .
Вы не можете поменять местами операнды . Например, в данном примере вы не можете получить выражение (1 + 3) * 2 = 8 .
Ввод >> Примеры вывода:
expressionsMatter(1,2,3)  ==>  return 9
Объяснение :
После расстановки знаков и скобок Максимальное значение , полученное из выражения (1+2) * 3 = 9 .

expressionsMatter(1,1,1)  ==>  return 3
  assert.strictEqual(expressionMatter(2, 1, 2), 6);
    assert.strictEqual(expressionMatter(2, 1, 1), 4);
    assert.strictEqual(expressionMatter(1, 1, 1), 3);
    assert.strictEqual(expressionMatter(1, 2, 3), 9);
    assert.strictEqual(expressionMatter(1, 3, 1), 5);
    assert.strictEqual(expressionMatter(2, 2, 2), 8);
 */
// function expressionMatter(a, b, c) {
//         return Math.max(
//             a * b * c,
//             a + b * c,
//             (a + b) * c,
//             a * (b + c),
//             a + (b + c),
//             a * (b * c),
//             a + b + c,
//
//         );
//
// }
//
// console.log(expressionMatter(2,1,2))

/*
Используйте переменные, чтобы найти сумму голов, забитых Месси в 3 соревнованиях.

Информация
Статистика забитых мячей Месси:

Соревнование	Цели
Ла Лига	43
Лига чемпионов	10
Копа дель Рей	5

Создайте эти три переменные и сохраните соответствующие значения, используя приведенную выше таблицу:
laLigaGoals
championsLeagueGoals
copaDelReyGoals
Создайте четвертую переменную с именем totalGoals, в которой хранится сумма всех голов Месси за этот год.
 Test.assertEquals(totalGoals, 58)
 */
// var totalGoals = 58
//
// var laLigaGoals = totalGoals - 10 -5
// var championsLeagueGoals = totalGoals - laLigaGoals - 5
// var copaDelReyGoals = totalGoals - laLigaGoals - championsLeagueGoals

/*
Функция суммирования всех цифр чисел
sum(99) // 18
sum(-32) // 5

 */
function sum(n){

    return String(Math.abs(n)).split('').map(Number).reduce((el,acc)=>acc+el)
}

console.log(sum(-99))