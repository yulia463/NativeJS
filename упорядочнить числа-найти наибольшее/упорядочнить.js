/*
Похоже, какой-то хулиган-сантехник со своим братом снова бегают и портят ваши сцены.

Соединение pipesэтапов вашего уровня вместе должно быть исправлено, прежде чем вы получите больше жалоб.

Список каналов правильный, когда каждый pipeпосле первого индекса больше (+1), чем предыдущий, и нет дубликатов.

Задача
Учитывая список a numbers, верните фиксированный список, чтобы значения увеличивались на 1 для каждого индекса от минимального значения до максимального значения (включая оба).

Пример
Input:  1,3,5,6,7,8 Output: 1,2,3,4,5,6,7,8
    assert.deepEqual(pipeFix([1,2,3,5,6,8,9]),[1,2,3,4,5,6,7,8,9]);
    assert.deepEqual(pipeFix([1,2,3,12]),[1,2,3,4,5,6,7,8,9,10,11,12]);
    assert.deepEqual(pipeFix([6,9]),[6,7,8,9]);
    assert.deepEqual(pipeFix([-1,4]),[-1,0,1,2,3,4]);
    assert.deepEqual(pipeFix([1,2,3]),[1,2,3]);
 */
// function pipeFix(numbers) {
//     const min = Math.min(...numbers);
//     const max = Math.max(...numbers);
//     let res=[]
//     for (let i = min; i <= max; i++) {
//
//        res.push(i)
//     }
//     return res.sort((a,b)=>a-b)
// }
// console.log(pipeFix([-1, 5, 6, 9, 23]))

/*
Задача: Поиск наибольшего числа
Условие: Напишите функцию findMaxNumber, которая принимает массив чисел и возвращает наибольшее число в массиве.
findMaxNumber([10, 5, 8, 20, 3]); // Ожидаемый результат: 20
findMaxNumber([0, -10, -2, -5]); // Ожидаемый результат: 0
 */
function findMaxNumber(arr) {
    for (let i = 0; i < arr.length; i++) {

    }
}

console.log(findMaxNumber([10, 5, 8, 20, 3]))